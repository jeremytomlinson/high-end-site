// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rgXZJgqmFkieHf2V3HDQvL
// Component: syOVkG1M7Ka
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: Q71JqyKvuX-OF/component

import { useScreenVariants as useScreenVariantsbvDFoTu31Oy } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: BvDFoTu-31-oy/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_classy_agency_website.module.css"; // plasmic-import: rgXZJgqmFkieHf2V3HDQvL/projectcss
import sty from "./PlasmicBrand.module.css"; // plasmic-import: syOVkG1M7Ka/css

import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: cQHefMtImhLf3y/icon
import ArrowDownsvgIcon from "./icons/PlasmicIcon__ArrowDownsvg"; // plasmic-import: ODm7rhdyBrTfbz/icon
import Icon21Icon from "./icons/PlasmicIcon__Icon21"; // plasmic-import: Y4AgwCAP-Xt0TI/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: bBcade5_umqxP7/icon
import Icon18Icon from "./icons/PlasmicIcon__Icon18"; // plasmic-import: SLpe6t9xNdsQgL/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: uyhnCa0j9DA71N/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: MQxg8jvMtCCSJY/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: 4Hn8HwiAcbbaY1/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: LQVpv7NQ_s5vS-/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: vdnqdGvOE2UyyA/icon

export type PlasmicBrand__VariantMembers = {};

export type PlasmicBrand__VariantsArgs = {};
type VariantPropType = keyof PlasmicBrand__VariantsArgs;
export const PlasmicBrand__VariantProps = new Array<VariantPropType>();

export type PlasmicBrand__ArgsType = {};
type ArgPropType = keyof PlasmicBrand__ArgsType;
export const PlasmicBrand__ArgProps = new Array<ArgPropType>();

export type PlasmicBrand__OverridesType = {
  root?: p.Flex<"div">;
  foreground2?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  span?: p.Flex<"span">;
  foreground?: p.Flex<"div">;
  foreground3?: p.Flex<"div">;
};

export interface DefaultBrandProps {}

export const defaultBrand__Args: Partial<PlasmicBrand__ArgsType> = {};

function PlasmicBrand__RenderFunc(props: {
  variants: PlasmicBrand__VariantsArgs;
  args: PlasmicBrand__ArgsType;
  overrides: PlasmicBrand__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultBrand__Args, props.args);
  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbvDFoTu31Oy()
  });

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__qv0Ux)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__oXRcU)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__meaAo)}
              >
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ddqCd)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__aJYi
                      )}
                      component={Link}
                      href={"/" as const}
                      platform={"nextjs"}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___32UQ9)}
                        displayHeight={"default" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"96px" as const}
                        src={{
                          src: "/plasmic/classy_agency_website/images/image2.png",
                          fullWidth: 200,
                          fullHeight: 200,
                          aspectRatio: undefined
                        }}
                      />
                    </p.PlasmicLink>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__y7Vn)}
                    >
                      <p.Stack
                        as={p.PlasmicLink}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__huraY
                        )}
                        component={Link}
                        href={"/brand" as const}
                        platform={"nextjs"}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__pWzx
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___1ENav
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Services"
                            : "BRAND"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yQSgt
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={p.PlasmicLink}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__irHzv
                        )}
                        component={Link}
                        href={
                          "https://high-end.fathym-it.com/dashboard" as const
                        }
                        platform={"nextjs"}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ayp1T
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6N1DL
                          )}
                        >
                          {"DASHBOARD"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__cqpSt
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      <p.Stack
                        as={p.PlasmicLink}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__inHgp
                        )}
                        component={Link}
                        href={"/digital" as const}
                        platform={"nextjs"}
                      >
                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__f7Smn
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ewOcd
                          )}
                        >
                          {"DIGITAL"}
                        </div>

                        {false ? (
                          <IconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gFhL4
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>

                      {true ? (
                        <p.Stack
                          as={p.PlasmicLink}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__vCdGe
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__cNsa1
                              )}
                              role={"img"}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zzFAy
                            )}
                          >
                            {"Contact"}
                          </div>

                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zJyAo
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={p.PlasmicLink}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__cHL
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__uiR1X
                              )}
                              role={"img"}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8LykY
                            )}
                          >
                            {"Company"}
                          </div>

                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yKl6
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  </div>
                ) : null}
                {false ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lmuVe)}
                  >
                    <button
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button___2HTvt
                      )}
                    >
                      {"Sign up"}
                    </button>

                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__deknG
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__vxPon)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8WEj7
                        )}
                      >
                        {"Log in"}
                      </div>

                      {false ? (
                        <IconIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___4V5B3
                          )}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </div>
                ) : null}
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iqAs)}
                >
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"We help you craft "}</React.Fragment>
                      <span
                        data-plasmic-name={"span"}
                        data-plasmic-override={overrides.span}
                        className={classNames(
                          projectcss.all,
                          projectcss.span,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.span
                        )}
                      >
                        {"high-end"}
                      </span>
                      <React.Fragment>{" digital experiences."}</React.Fragment>
                    </React.Fragment>
                  </h1>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hxn14
                    )}
                  >
                    {"BRAND | DASHBOARD | DIGITAL"}
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__a5Hr3)}>
                  <ArrowDownsvgIcon
                    className={classNames(projectcss.all, sty.svg__vgD2Z)}
                    role={"img"}
                  />
                </div>
              ) : null}
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__nAxu9)}>
            <div className={classNames(projectcss.all, sty.freeBox__t1I7N)}>
              <div className={classNames(projectcss.all, sty.freeBox___2SSsP)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__s88XV
                  )}
                >
                  {"SERVICES"}
                </div>

                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__k3C1Z
                  )}
                >
                  {"We help you stand out from the crowd."}
                </h2>

                <section
                  className={classNames(projectcss.all, sty.section__athQs)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"foreground"}
                    data-plasmic-override={overrides.foreground}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.foreground)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__w545W)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__zu985
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__b9WZd
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__wjzUr
                            )}
                          >
                            <p.PlasmicLink
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                sty.link__dGiAn
                              )}
                              component={Link}
                              href={"/brand" as const}
                              platform={"nextjs"}
                            >
                              <Icon21Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ktME
                                )}
                                role={"img"}
                              />
                            </p.PlasmicLink>
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___3ZwPg
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__j0YQh
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__m3Hos
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__z5A1D
                              )}
                            >
                              {"BRAND"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__hlz1F
                              )}
                            >
                              {
                                "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lpHtu
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__v8K5R
                            )}
                          >
                            <p.PlasmicLink
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                sty.link___5Bvjw
                              )}
                              component={Link}
                              href={
                                "https://high-end.fathym-it.com/dashboard" as const
                              }
                              platform={"nextjs"}
                            >
                              <Icon18Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__pIupQ
                                )}
                                role={"img"}
                              />
                            </p.PlasmicLink>
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__xMMlp
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__irP8
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__b4Sia
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__uch44
                              )}
                            >
                              {"DASHBOARD"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__tgCM
                              )}
                            >
                              {
                                "Consequat scelerisque a eros taciti nisl a sodales."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___6Ty8W
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__weel
                            )}
                          >
                            <p.PlasmicLink
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                sty.link__uDPb
                              )}
                              component={Link}
                              href={"/digital" as const}
                              platform={"nextjs"}
                            >
                              <Icon22Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__bdtc0
                                )}
                                role={"img"}
                              />
                            </p.PlasmicLink>
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__z811Z
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ha5ZB
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___4ZG83
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__wjouZ
                              )}
                            >
                              {"DIGITAL"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__oFqHw
                              )}
                            >
                              {
                                "Varius ad malesuada ullamcorper cursus scelerisque a a."
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </section>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__dxuU)}>
            <div className={classNames(projectcss.all, sty.freeBox__xo82B)}>
              <div className={classNames(projectcss.all, sty.freeBox___0DuRi)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__c3Dno
                  )}
                >
                  {"WORK"}
                </div>

                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2___4WsAr
                  )}
                >
                  {"Let our work speak for itself."}
                </h2>

                <section
                  className={classNames(projectcss.all, sty.section__pEnA)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"foreground3"}
                    data-plasmic-override={overrides.foreground3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.foreground3)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__hVqNp)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aDhQz
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vy7J6
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__pwEsv
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__j42Hb)}
                              displayHeight={"auto" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/classy_agency_website/images/pexelsTimMossholder1154739Jpg.jpeg",
                                fullWidth: 1920,
                                fullHeight: 1280,
                                aspectRatio: undefined
                              }}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__yUVZ
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__utFq3
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___36YFe
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__tiBxS
                              )}
                            >
                              {"Heading main Lorem"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qcCbo
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the "
                              }
                            </div>

                            {true ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox___6PaYg
                                )}
                              >
                                <Button color={"softYellow" as const}>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___2ThWt
                                    )}
                                  >
                                    {"Read More"}
                                  </div>
                                </Button>
                              </div>
                            ) : null}
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ezaIt
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___4PbGn
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__ewvNt)}
                              displayHeight={"auto" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/classy_agency_website/images/pexelsSolomanSoh1492232Jpg.jpeg",
                                fullWidth: 4000,
                                fullHeight: 2667,
                                aspectRatio: undefined
                              }}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__vuKlG
                              )}
                            >
                              <Icon8Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__v4KnJ
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__s6WIx
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__r0TOv
                              )}
                            >
                              {"Heading main Lorem"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rFeHz
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the "
                              }
                            </div>

                            {true ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__a1Ydf
                                )}
                              >
                                <Button color={"softYellow" as const}>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__gaVj4
                                    )}
                                  >
                                    {"Read More"}
                                  </div>
                                </Button>
                              </div>
                            ) : null}
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </section>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__dcuyG)}>
            <div className={classNames(projectcss.all, sty.freeBox__oj1H)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__igpNy
                )}
              >
                {"CLIENTS"}
              </div>

              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__m7WO
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Our Client brands"
                  : "We've been lucky to work with some great companies."}
              </h2>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fvbDz)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__mUgYs)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-loom.svg" as const
                  }
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__h3I)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-strapi.svg" as const
                  }
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__tyyfF)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-segment.svg" as const
                  }
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__pwpSa)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={
                    "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-xstate.svg" as const
                  }
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__zGfWu)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__lucMt)}
                  displayHeight={"96px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"96px" as const}
                  src={
                    "https://www.caa.com/sites/default/files/styles/headshot_500x500/public/speaker-headshots/Morgan_CAAspeakers_Heashot_Web.jpg?itok=WCOhQ1Hj" as const
                  }
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__igKlQ
                  )}
                >
                  {
                    "Lorem Ipsum is simply dummy text of the printing and typesetting industry. "
                  }
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cZEgr
                  )}
                >
                  {"Lorem, TGS"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rRbw4
                  )}
                >
                  {"Company name lorem"}
                </div>
              </p.Stack>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__uhNQa)}>
            <div className={classNames(projectcss.all, sty.freeBox__aQfLx)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__seFc4)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___785D0)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cVlQs)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"66px" as const}
                    src={{
                      src: "/plasmic/classy_agency_website/images/image2.png",
                      fullWidth: 200,
                      fullHeight: 200,
                      aspectRatio: undefined
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jiRsE)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hiZmn
                      )}
                    >
                      {"Connect with us"}
                    </div>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__yU9Wh)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__lmbXt)}
                        role={"img"}
                      />

                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__avkuu)}
                        role={"img"}
                      />

                      <Icon28Icon
                        className={classNames(projectcss.all, sty.svg___27PKb)}
                        role={"img"}
                      />
                    </p.Stack>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hKCwp)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3___46Pwp
                    )}
                  >
                    {"Navigation"}
                  </h3>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__fQwG9
                    )}
                    component={Link}
                    href={"/" as const}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__kgAwx)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1KymM
                      )}
                    >
                      {"Home"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___4Uajx)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___85Sxw
                    )}
                    component={Link}
                    href={"/brand" as const}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__khr6B)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pKm1Y
                      )}
                    >
                      {"Brand"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__nzwGh)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__wHao
                    )}
                    component={Link}
                    href={"https://high-end.fathym-it.com/dashboard" as const}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__bHqD5)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8Kr78
                      )}
                    >
                      {"Dashboard"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__v2Dg2)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__iiJzr
                    )}
                    component={Link}
                    href={"/digital" as const}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__bRr9O)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qK36C
                      )}
                    >
                      {"Digital"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__bR2L)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qj2P5)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__hVynt
                    )}
                  >
                    {"Support"}
                  </h3>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___4Qp4S
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__cbFSm)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__h9HzM
                      )}
                    >
                      {"Link"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__e7Fh3)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__gftzP
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___37Xyn)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tuT5U
                      )}
                    >
                      {"FAQs"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__eaqx)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__m4Kwn
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__y3ZZt)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___46Tu7
                      )}
                    >
                      {"Status"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__oo0Tx)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__tTPxY
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__pvh5B)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__emxhw
                      )}
                    >
                      {"Link"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__kllfc)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kh6Ac)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__kfrmu
                    )}
                  >
                    {"Address"}
                  </h3>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sK9TJ
                    )}
                  >
                    {"1223 Lorem state22\n1234 XYA VARE"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__evChF
                    )}
                  >
                    {"Phone:  214141414114"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__i9NHu
                    )}
                  >
                    {"Email:  Info@gmail.com"}
                  </div>
                </p.Stack>
              </p.Stack>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ddG2Q
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {"© Company. All rights reserved. Site proudly built with "}
                  </React.Fragment>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      projectcss.plasmic_default__inline,
                      sty.link__x2P5
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Plasmic"}
                  </p.PlasmicLink>
                  <React.Fragment>{"."}</React.Fragment>
                </React.Fragment>
              </div>
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "foreground2", "h1", "span", "foreground", "foreground3"],
  foreground2: ["foreground2", "h1", "span"],
  h1: ["h1", "span"],
  span: ["span"],
  foreground: ["foreground"],
  foreground3: ["foreground3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  foreground2: "div";
  h1: "h1";
  span: "span";
  foreground: "div";
  foreground3: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBrand__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBrand__VariantsArgs;
    args?: PlasmicBrand__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBrand__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicBrand__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicBrand__ArgProps,
      internalVariantPropNames: PlasmicBrand__VariantProps
    });

    return PlasmicBrand__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBrand";
  } else {
    func.displayName = `PlasmicBrand.${nodeName}`;
  }
  return func;
}

export const PlasmicBrand = Object.assign(
  // Top-level PlasmicBrand renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground2: makeNodeComponent("foreground2"),
    h1: makeNodeComponent("h1"),
    span: makeNodeComponent("span"),
    foreground: makeNodeComponent("foreground"),
    foreground3: makeNodeComponent("foreground3"),

    // Metadata about props expected for PlasmicBrand
    internalVariantProps: PlasmicBrand__VariantProps,
    internalArgProps: PlasmicBrand__ArgProps
  }
);

export default PlasmicBrand;
/* prettier-ignore-end */
